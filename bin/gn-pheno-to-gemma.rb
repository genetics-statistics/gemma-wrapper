#!/usr/bin/env ruby
#
# This code takes a JSON GN trait input and writes out a GEMMA pheno
# column using the JSON output that is generated by gn-geno-to-gemma.
#
# Pjotr Prins (c) 2025

require 'optparse'

options = { show_help: false }

opts = OptionParser.new do |o|
  o.banner = "\nUsage: #{File.basename($0)} [options]"

  o.on('--phenotypes filen',String, 'Phenotypes') do |phenotypes|
    options[:phenotypes] = phenotypes
    raise "Phenotype input file #{phenotypes} does not exist" if !File.exist?(phenotypes)
  end

  o.on('--geno-json filen',String, 'JSON file generated by gn-geno-to-gemma') do |filen|
    options[:input] = filen
    raise "JSON input file #{filen} does not exist" if !File.exist?(filen)
  end

  # o.on("-v", "--verbose", "Run verbosely") do |v|
  #   options[:verbose] = true
  # end

  # o.on("-d", "--debug", "Show debug messages and keep intermediate output") do |v|
  #   options[:debug] = true
  # end

  o.separator ""

  o.on_tail('-h', '--help', 'display this help and exit') do
    options[:show_help] = true
  end
end

opts.parse!(ARGV)

if options[:show_help] or ARGV.size < 1
  print opts
  # print USAGE
  exit 1
end

p "TEST"
